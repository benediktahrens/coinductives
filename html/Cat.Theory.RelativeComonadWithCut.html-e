<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<link href="coqdoc.css" rel="stylesheet" type="text/css"/>
<title>Cat.Theory.RelativeComonadWithCut</title>
</head>

<body>

<div id="page">

<div id="header">
</div>

<div id="main">

<div class="code">

<br/>

<br/>

<br/>

<br/>
</div>

<div class="doc">
<a name="lab6"></a><h2 class="section">Relative comonad with cut definition</h2>

</div>
<div class="code">

<br/>
<span class="id" type="keyword">Section</span> <a name="Defs"><span class="id" type="section">Defs</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Context</span> `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒞} `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒟}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒟"><span class="id" type="variable">𝒟</span></a>) (<span class="id" type="var">E</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a>) `{!<a class="idref" href="Cat.Theory.CartesianStrongMonoidal.html#CartesianStrongMonoidal"><span class="id" type="class">CartesianStrongMonoidal</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#F"><span class="id" type="variable">F</span></a>}.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Section</span> <a name="Defs.ExtendConstruction"><span class="id" type="section">ExtendConstruction</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Context</span> {<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a>}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<span class="id" type="tactic">cut</span> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> <span class="id" type="var">A</span><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>).<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Extend"><span class="id" type="definition">Extend</span></a> {<span class="id" type="var">A</span> <span class="id" type="var">B</span>} : <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.ExtendConstruction.T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#B"><span class="id" type="variable">B</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.ExtendConstruction.T"><span class="id" type="variable">T</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#B"><span class="id" type="variable">B</span></a>) <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Π.::'λ'_x_'..'_x_'↦'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">f</span> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'λ'_x_'..'_x_'↦'_x"><span class="id" type="notation">↦</span></a> <a class="idref" href="Cat.Theory.CartesianStrongMonoidal.html#φ"><span class="id" type="definition">φ</span></a><a class="idref" href="Cat.Theory.Isomorphism.html#::x_'⁻¹'"><span class="id" type="notation">⁻¹</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Product.html#::'⟨'_x_','_x_'⟩'"><span class="id" type="notation">⟨</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Functor.html#::x_'⋅'_x"><span class="id" type="notation">⋅</span></a> <a class="idref" href="Cat.Theory.Product.html#π₁"><span class="id" type="projection">π</span></a><a class="idref" href="Cat.Theory.Product.html#π₁"><span class="id" type="projection">₁</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.ExtendConstruction.T"><span class="id" type="variable">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit'"><span class="id" type="notation">counit</span></a> <a class="idref" href="Cat.Theory.Product.html#::'⟨'_x_','_x_'⟩'"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.ExtendConstruction.cut"><span class="id" type="variable">cut</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Product.html#::'⟨'_x_','_x_'⟩'"><span class="id" type="notation">⟩</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.ExtendConstruction"><span class="id" type="section">ExtendConstruction</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Structure</span> <a name="RelativeComonadWithCut"><span class="id" type="record">RelativeComonadWithCut</span></a> := <a name="mkRelativeComonadWithCut"><span class="id" type="constructor">mkRelativeComonadWithCut</span></a><br/>
&nbsp;&nbsp;{ <a name="T"><span class="id" type="projection">T</span></a>          :&gt; <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a><br/>
&nbsp;&nbsp;; <a name="cut"><span class="id" type="projection">cut</span></a>        : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">A</span>}<a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a><br/>
&nbsp;&nbsp;; <a name="cut_counit"><span class="id" type="projection">cut_counit</span></a> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">A</span>}<a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit['_x_']'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit['_x_']'"><span class="id" type="notation">counit</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit['_x_']'"><span class="id" type="notation">[</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit['_x_']'"><span class="id" type="notation">]</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="method">cut</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Functor.html#::x_'⋅'_x"><span class="id" type="notation">⋅</span></a> <a class="idref" href="Cat.Theory.Product.html#π₂"><span class="id" type="projection">π</span></a><a class="idref" href="Cat.Theory.Product.html#π₂"><span class="id" type="projection">₂</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅counit'"><span class="id" type="notation">counit</span></a><br/>
&nbsp;&nbsp;; <a name="cut_cobind"><span class="id" type="projection">cut_cobind</span></a> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">A</span> <span class="id" type="var">B</span>} {<span class="id" type="var">f</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#B"><span class="id" type="variable">B</span></a><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">},</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">cobind</span></a>(<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#f"><span class="id" type="variable">f</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="method">cut</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="method">cut</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="method">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">cobind</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Extend"><span class="id" type="definition">Extend</span></a> (@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="method">cut</span></a>) <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#f"><span class="id" type="variable">f</span></a>) }.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Definition</span> <a name="extend"><span class="id" type="definition">extend</span></a> {<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#RelativeComonadWithCut"><span class="id" type="record">RelativeComonadWithCut</span></a>} {<span class="id" type="var">A</span> <span class="id" type="var">B</span>} : <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#B"><span class="id" type="variable">B</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.F"><span class="id" type="variable">F</span></a> (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#B"><span class="id" type="variable">B</span></a>) <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Extend"><span class="id" type="definition">Extend</span></a> (@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="projection">cut</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a>).<br/>

<br/>
<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Defs"><span class="id" type="section">Defs</span></a>.<br/>

<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::'cut['_x_']'"><span class="id" type="notation">"</span></a>'cut[' X ]" := (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="projection">cut</span></a> <span class="id" type="var">_</span> (<span class="id" type="var">A</span> := <span class="id" type="var">X</span>)) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>
<span class="id" type="keyword">Notation</span> <a name="::x_'⋅cut'"><span class="id" type="notation">"</span></a>T '⋅cut'" := (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="projection">cut</span></a> <span class="id" type="var">T</span>) (<span class="id" type="tactic">at</span> <span class="id" type="keyword">level</span> 0).<br/>
<span class="id" type="keyword">Notation</span> <a name="::x_'⋅cut['_x_']'"><span class="id" type="notation">"</span></a>T '⋅cut[' X ]" := (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#cut"><span class="id" type="projection">cut</span></a> <span class="id" type="var">T</span> (<span class="id" type="var">A</span> := <span class="id" type="var">X</span>)) (<span class="id" type="tactic">at</span> <span class="id" type="keyword">level</span> 0, <span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::x_'⋅extend'"><span class="id" type="notation">"</span></a>T '⋅extend'" := (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#extend"><span class="id" type="definition">extend</span></a> <span class="id" type="var">T</span>) (<span class="id" type="tactic">at</span> <span class="id" type="keyword">level</span> 0).<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad'_'≔'_x_';'_'cut'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'RelativeComonadWithCut.make' ⦃ 'RelativeComonad' ≔ RelativeComonad ; 'cut' ≔ cut ⦄" :=<br/>
&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#mkRelativeComonadWithCut"><span class="id" type="constructor">mkRelativeComonadWithCut</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">RelativeComonad</span> <span class="id" type="tactic">cut</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>
<span class="id" type="keyword">Notation</span> <a name="::'RelativeComonadWithCut.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_';'_'cut'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'RelativeComonadWithCut.make' ⦃ 'T' ≔ T ; 'counit' ≔ counit ; 'cobind' ≔ cobind ; 'cut' ≔ cut ⦄" :=<br/>
&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#mkRelativeComonadWithCut"><span class="id" type="constructor">mkRelativeComonadWithCut</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonad.make</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <span class="id" type="var">T</span> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">;</span></a>  <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">counit</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <span class="id" type="var">counit</span> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">;</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">cobind</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <span class="id" type="var">cobind</span> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'T'_'≔'_x_';'_'counit'_'≔'_x_';'_'cobind'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a> ) <span class="id" type="tactic">cut</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>

<br/>
<span class="id" type="keyword">Section</span> <a name="MDefs"><span class="id" type="section">MDefs</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Context</span> `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒞} `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒟}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒟"><span class="id" type="variable">𝒟</span></a>} {<span class="id" type="var">E</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a>} `{!<a class="idref" href="Cat.Theory.CartesianStrongMonoidal.html#CartesianStrongMonoidal"><span class="id" type="class">CartesianStrongMonoidal</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#F"><span class="id" type="variable">F</span></a>}.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Local</span>&nbsp;<span class="id" type="keyword">Notation</span> <a name="MDefs.::'['_x_']'"><span class="id" type="notation">"</span></a>[ R ]" := (<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="projection">T</span></a> <span class="id" type="var">R</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Structure</span> <a name="Morphism"><span class="id" type="record">Morphism</span></a> (<span class="id" type="var">T</span> <span class="id" type="var">S</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#RelativeComonadWithCut"><span class="id" type="record">RelativeComonadWithCut</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.E"><span class="id" type="variable">E</span></a>) : <span class="id" type="keyword">Type</span> := <a name="mkMorphism"><span class="id" type="constructor">mkMorphism</span></a><br/>
&nbsp;&nbsp;{ <a name="τ"><span class="id" type="projection">τ</span></a>     :&gt; <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.::'['_x_']'"><span class="id" type="notation">[</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.::'['_x_']'"><span class="id" type="notation">]</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.::'['_x_']'"><span class="id" type="notation">[</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.::'['_x_']'"><span class="id" type="notation">]</span></a><br/>
&nbsp;&nbsp;; <a name="τ_cut"><span class="id" type="projection">τ</span></a><a name="τ_cut"><span class="id" type="projection">_cut</span></a> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">A</span>}<a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::x_'⋅cut'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::x_'⋅cut'"><span class="id" type="notation">cut</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#τ"><span class="id" type="method">τ</span></a>(<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs.E"><span class="id" type="variable">E</span></a> <a class="idref" href="Cat.Theory.Product.html#::x_'×'_x"><span class="id" type="notation">×</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#τ"><span class="id" type="method">τ</span></a>(<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#A"><span class="id" type="variable">A</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::x_'⋅cut'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::x_'⋅cut'"><span class="id" type="notation">cut</span></a> }.<br/>

<br/>
<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#MDefs"><span class="id" type="section">MDefs</span></a>.<br/>

<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'RelativeComonadWithCut.make' ⦃ 'RelativeComonad-τ' ≔ τ ⦄" :=<br/>
&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#mkMorphism"><span class="id" type="constructor">mkMorphism</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> τ <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>
<span class="id" type="keyword">Notation</span> <a name="::'RelativeComonadWithCut.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'RelativeComonadWithCut.make' ⦃ 'τ' ≔ τ ⦄" :=<br/>
&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#mkMorphism"><span class="id" type="constructor">mkMorphism</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> (<a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonad.make</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">τ</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> τ <a class="idref" href="Cat.Theory.RelativeComonad.html#::'RelativeComonad.make'_'⦃'_'τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>) <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>
<span class="id" type="keyword">Module</span> <a name="Morphism"><span class="id" type="module">Morphism</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Section</span> <a name="Morphism.id_composition"><span class="id" type="section">id_composition</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Context</span> `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒞} `{<a class="idref" href="Cat.Theory.Product.html#BinaryProduct"><span class="id" type="class">BinaryProduct</span></a> 𝒟}<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒟"><span class="id" type="variable">𝒟</span></a>} {<span class="id" type="var">E</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#𝒞"><span class="id" type="variable">𝒞</span></a>} `{!<a class="idref" href="Cat.Theory.CartesianStrongMonoidal.html#CartesianStrongMonoidal"><span class="id" type="class">CartesianStrongMonoidal</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#F"><span class="id" type="variable">F</span></a>}.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Implicit</span> <span class="id" type="keyword">Types</span> (<span class="id" type="var">T</span> <span class="id" type="var">S</span> <span class="id" type="var">U</span> : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.RelativeComonadWithCut"><span class="id" type="record">RelativeComonadWithCut</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.E"><span class="id" type="variable">E</span></a>).<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.Hom"><span class="id" type="definition">Hom</span></a> <span class="id" type="var">T</span> <span class="id" type="var">S</span> : <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.Setoid"><span class="id" type="record">Setoid</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Setoid.make</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Carrier</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.Morphism"><span class="id" type="record">Morphism</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">;</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Equiv</span></a>   <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'_≈_'"><span class="id" type="notation">_</span></a><a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">≈</span></a><a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">_</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Local</span>&nbsp;<span class="id" type="keyword">Infix</span> <a name="Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">"</span></a>⇒" := <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.Hom"><span class="id" type="definition">Hom</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.id"><span class="id" type="definition">id</span></a> {<span class="id" type="var">S</span>} : <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonadWithCut.make</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonad</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">-τ</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Theory.Category.html#id"><span class="id" type="projection">id</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.compose"><span class="id" type="definition">compose</span></a> {<span class="id" type="var">S</span> <span class="id" type="var">T</span> <span class="id" type="var">U</span>} : <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#U"><span class="id" type="variable">U</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#S"><span class="id" type="variable">S</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#U"><span class="id" type="variable">U</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">g</span> <span class="id" type="var">f</span> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">↦</span></a><a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">₂</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonadWithCut.make</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">RelativeComonad</span></a><a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">-τ</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#g"><span class="id" type="variable">g</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#::'RelativeComonadWithCut.make'_'⦃'_'RelativeComonad-τ'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#Morphism.id_composition"><span class="id" type="section">id_composition</span></a>.<br/>

<br/>
<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.RelativeComonadWithCut.html#"><span class="id" type="module">Morphism</span></a>.<br/>
</div>
</div>

<div id="footer">
<hr/><a href="index.html">Index</a><hr/>This page has been generated by <a href="http://coq.inria.fr/">coqdoc</a>
</div>

</div>

</body>
</html>