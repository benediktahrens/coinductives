<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<link href="coqdoc.css" rel="stylesheet" type="text/css"/>
<title>Cat.Theory.Comodule</title>
</head>

<body>

<div id="page">

<div id="header">
</div>

<div id="main">

<div class="code">

<br/>

<br/>

<br/>

<br/>
</div>

<div class="doc">
<a name="lab30"></a><h2 class="section">Comodule over relative comonad definition</h2>

</div>
<div class="code">

<br/>
<span class="id" type="keyword">Structure</span> <a name="Comodule"><span class="id" type="record">Comodule</span></a> `{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> 𝒞 𝒟} (<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a>) (<span class="id" type="var">ℰ</span> : <a class="idref" href="Cat.Theory.Category.html#Category"><span class="id" type="record">Category</span></a>) : <span class="id" type="keyword">Type</span> := <a name="mkComodule"><span class="id" type="constructor">mkComodule</span></a><br/>
{ <a name="M"><span class="id" type="projection">M</span></a>               :&gt; <a class="idref" href="Cat.Theory.Comodule.html#𝒞"><span class="id" type="variable">𝒞</span></a> <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:x_'→'_x"><span class="id" type="notation">→</span></a> <a class="idref" href="Cat.Theory.Comodule.html#ℰ"><span class="id" type="variable">ℰ</span></a><br/>
; <a name="mcobind"><span class="id" type="projection">mcobind</span></a>         : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">C</span> <span class="id" type="var">D</span>}<a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="method">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="method">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a><br/>
; <a name="mcobind_counit"><span class="id" type="projection">mcobind_counit</span></a>  : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">C</span>}<a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mcobind"><span class="id" type="method">mcobind</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">counit</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">]</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">id</span></a><a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="method">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">]</span></a><br/>
; <a name="mcobind_mcobind"><span class="id" type="projection">mcobind_mcobind</span></a> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">C</span> <span class="id" type="var">D</span> <span class="id" type="var">E</span>} {<span class="id" type="var">f</span> : <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a>} {<span class="id" type="var">g</span> : <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Comodule.html#E"><span class="id" type="variable">E</span></a><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">},</span></a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.Comodule.html#mcobind"><span class="id" type="method">mcobind</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mcobind"><span class="id" type="method">mcobind</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a>) <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mcobind"><span class="id" type="method">mcobind</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::x_'⋅cobind'"><span class="id" type="notation">cobind</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a>)) }.<br/>

<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::x_'⋅mcobind'"><span class="id" type="notation">"</span></a>M '⋅mcobind'" := (<a class="idref" href="Cat.Theory.Comodule.html#mcobind"><span class="id" type="projection">mcobind</span></a> <span class="id" type="var">M</span>) (<span class="id" type="tactic">at</span> <span class="id" type="keyword">level</span> 0).<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::'Comodule.make'_'⦃'_'M'_'≔'_x_';'_'mcobind'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'Comodule.make' ⦃ 'M' ≔ M ; 'mcobind' ≔ mcobind ⦄" :=<br/>
&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.Comodule.html#mkComodule"><span class="id" type="constructor">mkComodule</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">M</span> <span class="id" type="var">mcobind</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>
</div>

<div class="doc">
<a name="lab31"></a><h2 class="section">Functoriality of comodule</h2>

</div>
<div class="code">

<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Context</span> `{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> 𝒞 𝒟} {<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a>} {<span class="id" type="var">ℰ</span>} (<span class="id" type="var">M</span> : <a class="idref" href="Cat.Theory.Comodule.html#Comodule"><span class="id" type="record">Comodule</span></a> <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#ℰ"><span class="id" type="variable">ℰ</span></a>).<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="mlift"><span class="id" type="definition">mlift</span></a> {<span class="id" type="var">A</span> <span class="id" type="var">B</span>} : <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#B"><span class="id" type="variable">B</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#B"><span class="id" type="variable">B</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'['_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Π.::'λ'_x_'..'_x_'↦'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">f</span> <a class="idref" href="Cat.Theory.SetoidType.html#Π.::'λ'_x_'..'_x_'↦'_x"><span class="id" type="notation">↦</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.M"><span class="id" type="variable">M</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">mcobind</span></a> (<a class="idref" href="Cat.Theory.Comodule.html#Functoriality.F"><span class="id" type="variable">F</span></a><a class="idref" href="Cat.Theory.Functor.html#::x_'⋅'_x"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">counit</span></a><a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.RelativeComonad.html#::'counit['_x_']'"><span class="id" type="notation">]</span></a>).<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Lemma</span> <a name="mlift_id"><span class="id" type="lemma">mlift_id</span></a> <span class="id" type="var">A</span> : <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">id</span></a><a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">]</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mlift"><span class="id" type="definition">mlift</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">id</span></a><a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">]</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Lemma</span> <a name="mlift_compose"><span class="id" type="lemma">mlift_compose</span></a> <span class="id" type="var">A</span> <span class="id" type="var">B</span> <span class="id" type="var">C</span> (<span class="id" type="var">f</span> : <a class="idref" href="Cat.Theory.Comodule.html#A"><span class="id" type="variable">A</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#B"><span class="id" type="variable">B</span></a>) (<span class="id" type="var">g</span> : <a class="idref" href="Cat.Theory.Comodule.html#B"><span class="id" type="variable">B</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a>) : <a class="idref" href="Cat.Theory.Comodule.html#mlift"><span class="id" type="definition">mlift</span></a> (<a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a>) <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">(</span></a><a class="idref" href="Cat.Theory.Comodule.html#mlift"><span class="id" type="definition">mlift</span></a> <a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a><a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">)</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">(</span></a><a class="idref" href="Cat.Theory.Comodule.html#mlift"><span class="id" type="definition">mlift</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a><a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">)</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Definition</span> <a name="MLift"><span class="id" type="definition">MLift</span></a> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.𝒞"><span class="id" type="variable">𝒞</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Functoriality.ℰ"><span class="id" type="variable">ℰ</span></a> := <a class="idref" href="Cat.Theory.Functor.html#mkFunctor"><span class="id" type="constructor">mkFunctor</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mlift_id"><span class="id" type="lemma">mlift_id</span></a> <a class="idref" href="Cat.Theory.Comodule.html#mlift_compose"><span class="id" type="lemma">mlift_compose</span></a>.<br/>

<br/>

<br/>
</div>

<div class="doc">
<a name="lab32"></a><h2 class="section">Morphism of comodules</h2>

</div>
<div class="code">

<br/>
<span class="id" type="keyword">Structure</span> <a name="Morphism"><span class="id" type="record">Morphism</span></a> `{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> 𝒞 𝒟} {<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a>} {<span class="id" type="var">ℰ</span>} (<span class="id" type="var">M</span> <span class="id" type="var">N</span> : <a class="idref" href="Cat.Theory.Comodule.html#Comodule"><span class="id" type="record">Comodule</span></a> <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#ℰ"><span class="id" type="variable">ℰ</span></a>) : <span class="id" type="keyword">Type</span> := <a name="mkMorphism"><span class="id" type="constructor">mkMorphism</span></a><br/>
{ <a name="α"><span class="id" type="projection">α</span></a>          :&gt; <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> <span class="id" type="var">C</span><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#N"><span class="id" type="variable">N</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a><br/>
; <a name="α_commutes"><span class="id" type="projection">α_commutes</span></a> : <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> {<span class="id" type="var">C</span> <span class="id" type="var">D</span>} {<span class="id" type="var">f</span> : <a class="idref" href="Cat.Theory.Comodule.html#T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a> <a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">},</span></a> <a class="idref" href="Cat.Theory.Comodule.html#α"><span class="id" type="method">α</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#D"><span class="id" type="variable">D</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">mcobind</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Comodule.html#N"><span class="id" type="variable">N</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">⋅</span></a><a class="idref" href="Cat.Theory.Comodule.html#::x_'⋅mcobind'"><span class="id" type="notation">mcobind</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#α"><span class="id" type="method">α</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a>) }.<br/>

<br/>

<br/>
<span class="id" type="keyword">Notation</span> <a name="::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">"</span></a>'Comodule.make' ⦃ 'α' ≔ α ⦄" :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(@<a class="idref" href="Cat.Theory.Comodule.html#mkMorphism"><span class="id" type="constructor">mkMorphism</span></a> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">_</span> <span class="id" type="var">α</span> <span class="id" type="var">_</span>) (<span class="id" type="var">only</span> <span class="id" type="var">parsing</span>).<br/>

<br/>
<span class="id" type="keyword">Module</span> <a name="Morphism"><span class="id" type="module">Morphism</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">Section</span> <a name="Morphism.id_composition"><span class="id" type="section">id_composition</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Context</span> `{<span class="id" type="var">F</span> : <a class="idref" href="Cat.Theory.Functor.html#Functor"><span class="id" type="record">Functor</span></a> 𝒞 𝒟} {<span class="id" type="var">T</span> : <a class="idref" href="Cat.Theory.RelativeComonad.html#RelativeComonad"><span class="id" type="record">RelativeComonad</span></a> <a class="idref" href="Cat.Theory.Comodule.html#F"><span class="id" type="variable">F</span></a>} {<span class="id" type="var">ℰ</span> : <a class="idref" href="Cat.Theory.Category.html#Category"><span class="id" type="record">Category</span></a>}.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.Hom"><span class="id" type="definition">Hom</span></a> (<span class="id" type="var">M</span> <span class="id" type="var">N</span> : <a class="idref" href="Cat.Theory.Comodule.html#Morphism.Comodule"><span class="id" type="record">Comodule</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.ℰ"><span class="id" type="variable">ℰ</span></a>) : <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.Setoid"><span class="id" type="record">Setoid</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Setoid.make</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Carrier</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.Morphism"><span class="id" type="record">Morphism</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#N"><span class="id" type="variable">N</span></a><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">;</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">Equiv</span></a>   <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">f</span> <span class="id" type="var">g</span> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">∙</span></a> <a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">∀</span></a> <span class="id" type="var">x</span><a class="idref" href="Cat.Misc.Unicode.html#:type_scope:'∀'_x_'..'_x_','_x"><span class="id" type="notation">,</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a> <a class="idref" href="Cat.Theory.Comodule.html#x"><span class="id" type="variable">x</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::x_'≈'_x"><span class="id" type="notation">≈</span></a> <a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a> <a class="idref" href="Cat.Theory.Comodule.html#x"><span class="id" type="variable">x</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Setoid.::'Setoid.make'_'⦃'_'Carrier'_'≔'_x_';'_'Equiv'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Local</span>&nbsp;<span class="id" type="keyword">Infix</span> <a name="Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">"</span></a>⇒" := <a class="idref" href="Cat.Theory.Comodule.html#Morphism.Hom"><span class="id" type="definition">Hom</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.id"><span class="id" type="definition">id</span></a> {<span class="id" type="var">M</span> : <a class="idref" href="Cat.Theory.Comodule.html#Morphism.Comodule"><span class="id" type="record">Comodule</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.ℰ"><span class="id" type="variable">ℰ</span></a>} : <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">Comodule.make</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">α</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">C</span> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">∙</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">id</span></a><a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a> <a class="idref" href="Cat.Theory.Category.html#::'id['_x_']'"><span class="id" type="notation">]</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;&nbsp;&nbsp;<span class="id" type="keyword">Program Definition</span> <a name="Morphism.compose"><span class="id" type="definition">compose</span></a> {<span class="id" type="var">M</span> <span class="id" type="var">N</span> <span class="id" type="var">P</span> : <a class="idref" href="Cat.Theory.Comodule.html#Morphism.Comodule"><span class="id" type="record">Comodule</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.T"><span class="id" type="variable">T</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.ℰ"><span class="id" type="variable">ℰ</span></a>} : <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">[</span></a> <a class="idref" href="Cat.Theory.Comodule.html#N"><span class="id" type="variable">N</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#P"><span class="id" type="variable">P</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#N"><span class="id" type="variable">N</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">⟶</span></a> <a class="idref" href="Cat.Theory.Comodule.html#M"><span class="id" type="variable">M</span></a> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition.::x_'⇒'_x"><span class="id" type="notation">⇒</span></a> <a class="idref" href="Cat.Theory.Comodule.html#P"><span class="id" type="variable">P</span></a> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'['_x_'⟶'_x_'⟶'_x_']'"><span class="id" type="notation">]</span></a> :=<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">g</span> <span class="id" type="var">f</span> <a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">↦</span></a><a class="idref" href="Cat.Theory.SetoidType.html#Π₂.::'λ'_x_'..'_x_'↦₂'_x"><span class="id" type="notation">₂</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">Comodule.make</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">⦃</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">α</span></a> <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">≔</span></a> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">λ</span></a> <span class="id" type="var">C</span> <a class="idref" href="Cat.Misc.Unicode.html#::'λ'_x_'..'_x_'∙'_x"><span class="id" type="notation">∙</span></a> <a class="idref" href="Cat.Theory.Comodule.html#g"><span class="id" type="variable">g</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a>) <a class="idref" href="Cat.Theory.Category.html#::x_'∘'_x"><span class="id" type="notation">∘</span></a> <a class="idref" href="Cat.Theory.Comodule.html#f"><span class="id" type="variable">f</span></a>(<a class="idref" href="Cat.Theory.Comodule.html#C"><span class="id" type="variable">C</span></a>) <a class="idref" href="Cat.Theory.Comodule.html#::'Comodule.make'_'⦃'_'α'_'≔'_x_'⦄'"><span class="id" type="notation">⦄</span></a>.<br/>

<br/>
&nbsp;&nbsp;<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.Comodule.html#Morphism.id_composition"><span class="id" type="section">id_composition</span></a>.<br/>

<br/>
<span class="id" type="keyword">End</span> <a class="idref" href="Cat.Theory.Comodule.html#"><span class="id" type="module">Morphism</span></a>.<br/>
</div>
</div>

<div id="footer">
<hr/><a href="index.html">Index</a><hr/>This page has been generated by <a href="http://coq.inria.fr/">coqdoc</a>
</div>

</div>

</body>
</html>