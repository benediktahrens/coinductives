(*----------------------------------------------------------------------------*)
(*    Category of types                                                       *)
(*----------------------------------------------------------------------------*)

Require Import Theory.Category.

(*
 * RawCategory
 *)
Definition Type_category : category :=
  {| Obj     := Type
   ; Hom     := Œª A B ‚àô A ‚Üí B
   ; id      := Œª A x ‚àô x
   ; compose := Œª A B C f g x ‚àô f (g x)
   ; Hom_eq  := Œª A B f‚ÇÅ f‚ÇÇ ‚àô ‚àÄ x, f‚ÇÅ x = f‚ÇÇ x |}.

(*
 * IsCategory
 *)
Definition Type_IsCategory : IsCategory Type_category.
Proof. constructor.
  + (* Hom_eq_Equivalence *)
    intros A B; constructor; hnf; simpl; [ reflexivity | now symmetry | etransitivity ; eauto].
  + (* left_id *)
    now simpl.
  + (* right_id *)
    now simpl.
  + (* assoc *)
    now simpl.
  + (* compose_cong *)
    intros A B C f‚ÇÅ f‚ÇÇ eq_f‚ÇÅf‚ÇÇ g‚ÇÅ g‚ÇÇ eq_g‚ÇÅg‚ÇÇ x; simpl in *.
    now rewrite eq_g‚ÇÅg‚ÇÇ, eq_f‚ÇÅf‚ÇÇ.
Qed.

Definition ùëªùíöùíëùíÜ : Category := {| _category := Type_category
                              ; isCategory   := Type_IsCategory |}.
